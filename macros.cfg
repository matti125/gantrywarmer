[gcode_macro DISABLED_USER_START_PRINT_BED_MESH]
gcode:
    {% set extruder_first_layer_temp = (params.EXTRUDER_TEMP|default("")).split(",") %}
    {% if extruder_first_layer_temp[0] %}
        {% set first_layer_temp = extruder_first_layer_temp[0]|float %}
        RESPOND TYPE=echo MSG="_USER_START_PRINT_BED_MESH: First layer temp {first_layer_temp}."
    {% else %}
        {% set first_layer_temp = None %}
        RESPOND TYPE=echo MSG="_USER_START_PRINT_BED_MESH: No first layer temp defined."
    {% endif %}

  {% if first_layer_temp %}
        RESPOND TYPE=echo MSG="_USER_START_PRINT_BED_MESH: Setting first-layer temperature to {first_layer_temp}C."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={first_layer_temp}
        RESPOND TYPE=echo MSG="_USER_START_PRINT_BED_MESH: Waiting for hotend to reach first-layer temperature within ±5C."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={first_layer_temp - 5} MAXIMUM={first_layer_temp + 5}
    {% endif %}



[gcode_macro DISABLED_USER_END_START_PRINT]
gcode:
  {% set  z_offset = 0.12 %}

  RESPOND TYPE=echo MSG="_USER_END_START_PRINT: applying custom z offset of { z_offset }mm"
  SET_GCODE_OFFSET_ORG Z_ADJUST={z_offset} MOVE=1 SPEED=300
# seems like Ratos might not add any z correction for hotend expansion, unless contact probe is used. Thus we need to do it here.
# This will be a toolhead temperature-dependant variable, based on hotend expansion coefficient. 
# Now it is naively just dependent on hotend temp, although chamber temp has an effect as well, and the expansion of 
# the Beacon mount should be removed from the offset.

  # Calibration temperature (20C) and coefficient for expansion adjustment
  {% set calibration_temp = 20.0 %}
  {% set coefficient = params.COEFFICIENT|default(0.6e-3)|float %}  # Default coefficient in mm/C. The value corresponds to 0.6um/C or 60um/100C,

  # Retrieve the first layer temperature from EXTRUDER_TEMP parameter
  {% set extruder_first_layer_temp = (params.EXTRUDER_TEMP|default("")).split(",") %}
  {% if extruder_first_layer_temp[0] %}
      {% set first_layer_temp = extruder_first_layer_temp[0]|float %}
  {% else %}
      {% set first_layer_temp = None %}
  {% endif %}

  # Ensure we have a temperature to work with and calculate z_offset based on it
  {% if first_layer_temp is not none %}
      {% set z_offset = (first_layer_temp - calibration_temp) * coefficient %}
      RESPOND TYPE=echo MSG="_USER_END_START_PRINT: Calculated Z offset of {z_offset}mm for hotend temperature {first_layer_temp}C (calibration at {calibration_temp}C)"
      
      # Apply the Z offset. Call the original SET_GCODE_OFFSET, as we are not dealing with beacon in this print after this. Not sure of the sideeffects.
      SET_GCODE_OFFSET_ORG Z_ADJUST={z_offset} MOVE=1 SPEED=300
  {% else %}
      RESPOND TYPE=error MSG="_USER_END_START_PRINT: No EXTRUDER_TEMP specified; unable to calculate Z offset."
  {% endif %}

[gcode_macro GANTRY_PREHEAT]
gcode:
    # Access parameters with defaults and convert to floats
    {% set temp = params.TEMP|default(200)|float %}
    {% set travel_speed = printer["gcode_macro RatOS"].macro_travel_speed|float * 60 %}
    {% set time = params.TIME|default(30)|float %}
    {% set margin = params.MARGIN|default(5)|float %}
    {% set y_position = params.Y|default(printer["gcode_macro RatOS"].printable_y_max|float)|float %}
    {% set z_height = params.Z|default(10.0)|float %}
    {% set back_and_forth_speed = 50.0 * 60.0 %} ; Set back-and-forth X speed to 50 mm/s in mm/min

    # Internal temperature variables
    {% set min_temp = 200.0 %}
    {% set max_temp = 300.0 %}

    # Retrieve max X and Y values
    {% set printable_x_max = printer["gcode_macro RatOS"].printable_x_max|float %}
    {% set printable_y_max = printer["gcode_macro RatOS"].printable_y_max|float %}

    # Set retraction distance from RatOS or default to 4mm
    {% set retract = printer["gcode_macro RatOS"].end_print_retract_filament|default(4)|float %}
    {% set extrusion = 25 %} ; Extract enough so that we get some pull for the filament

    # Retrieve the first layer extruder temperature if specified
    {% set extruder_first_layer_temp = (params.EXTRUDER_TEMP|default("")).split(",") %}
    {% if extruder_first_layer_temp[0] %}
        {% set first_layer_temp = extruder_first_layer_temp[0]|float %}
    {% else %}
        {% set first_layer_temp = None %}
    {% endif %}
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: First layer temp {first_layer_temp}."

    # Save the current state of the kinematic system
    RESPOND TYPE=echo MSG="Starting GANTRY_PREHEAT: Saving current state."
    SAVE_GCODE_STATE NAME=GANTRY_PREHEAT_STATE

    # Home the printer if not already homed
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Checking if homing is needed."
    MAYBE_HOME

    # Calculate Y offset if Y is beyond the printable area
    {% if y_position > printable_y_max %}
        {% set y_offset = y_position - printable_y_max %}
    {% else %}
        {% set y_offset = 0 %}
    {% endif %}

    # Apply the Y offset if necessary
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Applying Y offset of {y_offset} mm."
    SET_GCODE_OFFSET Y={y_offset}

    # Move the head to the middle of the X range and the offset-adjusted Y position
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Moving to a bit left of middle of X range and adjusted Y position."
    G1 X{printable_x_max / 2 - 50} Y{y_position} Z{z_height} F{travel_speed}


    # Set the hotend temperature to the specified initial temperature
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Setting hotend temperature to {temp}C."
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp}

    # Wait for the temperature to reach at least the minimum temperature
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Waiting for hotend temperature to reach {min_temp}C."
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={min_temp} MAXIMUM={max_temp}

    # Extrude filament before retracting
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Extruding {extrusion}mm of filament."
    G91                         ; Switch to relative positioning
    G1 E{extrusion} F300        ; Extrude 1.5 times the retraction amount at a speed of 300 mm/min

    # Retract filament away from the hotend area
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Retracting {retract}mm of filament."
    G1 E-{retract} F300         ; Retract the specified amount of filament at a speed of 300 mm/min
    G90                         ; Switch back to absolute positioning

    # Define other parameters
    {% set move_distance = printable_x_max - (2 * margin) %} ; Total X travel distance
    {% set time_per_move = (move_distance / (back_and_forth_speed / 60)) * 2 %} ; Time for one back-and-forth in seconds
    {% set sweeps = (time / time_per_move) | int %} ; Calculate number of sweeps

    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Starting back-and-forth motion for {time} seconds at 50 mm/s."

    # Perform the back-and-forth motion for the calculated number of times, moving X only
    {% for i in range(sweeps) %}
        RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Sweep {i+1} of {sweeps}."
        G1 X{printable_x_max - margin} F{back_and_forth_speed} ; Move to the max X position
        G1 X{margin} F{back_and_forth_speed}                  ; Move to the min X position
    {% endfor %}

    # Move to the center of the gantry in the X direction only
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Moving to the middle of the gantry in X direction."
    G1 X{printable_x_max / 2} F{travel_speed}

    # Set the target first-layer temperature if specified and wait until within 5 degrees
    {% if first_layer_temp %}
        RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Setting first-layer temperature to {first_layer_temp}C."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={first_layer_temp}
        RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Waiting for hotend to reach first-layer temperature within ±5C."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={first_layer_temp - 5} MAXIMUM={first_layer_temp + 5}
    {% endif %}

    # Restore the original state of the kinematic system
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Restoring original state."
    RESTORE_GCODE_STATE NAME=GANTRY_PREHEAT_STATE
    RESPOND TYPE=echo MSG="GANTRY_PREHEAT: Complete."